/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/shorten": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Encurtar URL
         * @description Cria uma URL encurtada a partir da URL original
         */
        post: operations["shorten"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Redirecionar para URL original */
        get: operations["redirect"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Obter estatísticas da URL
         * @description Retorna o código, URL original e total de acessos
         */
        get: operations["stats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ranking": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Ranking de URLs
         * @description Lista as URLs mais acessadas
         */
        get: operations["ranking"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ShortenRequest: {
            /**
             * @description URL original a ser encurtada
             * @example https://www.google.com/
             */
            url: string;
            /**
             * @description Código customizado opcional com 5 caracteres alfanuméricos
             * @example ABCDE
             */
            code?: string;
        };
        ErrorResponse: {
            /**
             * @description Tipo do erro apresentado
             * @example URL não encontrada
             */
            error?: string;
            /**
             * @description Mensagem descritiva do erro
             * @example O código informado não existe
             */
            message?: string;
        };
        ValidationErrorResponse: {
            /**
             * @description Tipo do erro apresentado
             * @example Erro de validação
             */
            error?: string;
            /** @description Detalhes de erro por campo */
            details?: {
                [key: string]: string;
            };
        };
        ShortenResponse: {
            /**
             * Format: int64
             * @description Identificador interno
             * @example 1
             */
            id?: number;
            /** @description URL original */
            originalUrl?: string;
            /**
             * @description Código da URL encurtada
             * @example ABCDE
             */
            code?: string;
            /**
             * Format: date-time
             * @description Data de criação em UTC
             */
            createdAt?: string;
        };
        StatsResponse: {
            /**
             * @description Código da URL encurtada
             * @example ABCDE
             */
            code?: string;
            /** @description URL original */
            originalUrl?: string;
            /**
             * Format: int64
             * @description Total de acessos
             * @example 42
             */
            hits?: number;
        };
        RankingItem: {
            /**
             * @description Código da URL encurtada
             * @example ABCDE
             */
            code?: string;
            /**
             * Format: int64
             * @description Total de acessos
             * @example 42
             */
            hits?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    shorten: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShortenRequest"];
            };
        };
        responses: {
            /** @description Criado */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ShortenResponse"];
                };
            };
            /** @description Erro de validação */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ValidationErrorResponse"];
                };
            };
            /** @description Código em uso */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Erro interno */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    redirect: {
        parameters: {
            query?: never;
            header?: {
                "User-Agent"?: string;
                Referer?: string;
            };
            path: {
                code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Redirecionado */
            302: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": Record<string, never>;
                };
            };
            /** @description URL não encontrada */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Erro interno */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    stats: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["StatsResponse"];
                };
            };
            /** @description URL não encontrada */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Erro interno */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    ranking: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RankingItem"];
                };
            };
            /** @description Erro interno */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
